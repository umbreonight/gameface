input:not([type]),
input[type=text],
input[type=password],
input[type=email],
input[type=url],
input[type=time],
input[type=date],
input[type=datetime],
input[type=datetime-local],
input[type=tel],
input[type=number],
input[type=search] {
  // Shared styles
  color: $text-color;
  background-color: $input-background-color;
  border: none;
  border: $input-border;
  border-radius: $input-border-radius;
  outline: none;
  height: $input-height;
  line-height: $input-height;
  font-size: $input-font-size;
  padding: $input-padding;
  box-shadow: none;
  // box-sizing: content-box;
  margin: 5px 0;

  @include input-placeholder {
    color: $gray-500;
  }

  &:hover {
    border-color: $primary;
  }

  &:focus {
    outline: none;
    border-color: $input-focus-border;
  }

  &[type="number"]::-webkit-inner-spin-button,
  &[type="number"]::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  // Disabled input style
  &:disabled,
  &[disabled] &[readonly="readonly"] {
    color: $input-disabled-color;
    border-color: $input-disabled-border;
    pointer-events: none;
  }

  &:required+label:before,
  &[required]+label:before {
    color: $primary;
    content: '*';
  }

  // Disabled label style
  &[disabled]+label,
  &[readonly="readonly"]+label {
    color: $input-disabled-color;

    &+span {
      color: $input-disabled-color;
    }

    &:before {
      color: $input-disabled-color;
    }
  }
}

.input {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  font-family: $font-family-base;
  margin: 15px 0;
  color: $text-color;
  justify-content: flex-start;


  label {
    text-align: left;
    text-transform: unset;
    font-size: $font-size-base;
    font-family: $font-family-base;
    order: -1;

    &+span {
      text-align: left;
      user-select: none;
      @extend .truncate;
    }
  }

  &.validate {
    input:optional {
      border-color: $input-border;
    }

    input:invalid {
      border-color: $warning;
    }

    input:required:invalid {
      border-color: $danger;
    }
  }

  &.floating-label {

    margin: 1.5rem 0 inherit;

    input {
      // padding: 1.8rem 1rem 0.6rem;
      font-size: 1rem;
      border: none;
      border-bottom: 0.1rem solid $border;
      transition: border-color 0.2s ease-in-out;
      // caret-color: $primary;
      padding-left: 0.1rem;

      &::placeholder {
        color: $secondary-lighten;
      }

      &:hover {
        border-color: $input-focus-border;
      }

      &:placeholder-shown+label::before {
        transform: translate3d(0, -2.2rem, 0) scale3d(1, 1, 1);
      }
    }

    label {
      display: block;
      position: relative;
      max-height: 0;
      font-weight: 500;
      pointer-events: none;

      &::before {
        content: attr(data-content);
        display: inline-block;
        filter: blur(0);
        backface-visibility: hidden;
        transform-origin: left top;
        transition: transform 0.2s ease;
        top: 1rem;
        left: 0;
        position: relative;
      }

      &::after {
        bottom: 1rem;
        content: "";
        height: 0.1rem;
        position: absolute;
        transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1),
          opacity 180ms cubic-bezier(0.4, 0, 0.2, 1), background-color 0.3s ease;
        opacity: 0;
        left: 0;
        top: 100%;
        margin-top: -0.1rem;
        transform: scale3d(0, 1, 1);
        width: 100%;
        background-color: $accent;
      }
    }

    // label::before,
    input:focus+label::before,
    input:not(:empty) {
      transform: translate3d(0, -1.5rem, 0) scale3d(0.82, 0.82, 1);
    }

    &.has-value label::before {
      transform: translate3d(0, -1.5rem, 0) scale3d(0.82, 0.82, 1);
    }
  }
}
